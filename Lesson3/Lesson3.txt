Task 2

a) 	SELECT  
		Name, 
		ListPrice,
		StandardCost, 
		CASE WHEN StandardCost = 0 OR StandardCost IS NULL THEN 'Not for sale'
	    	     WHEN StandardCost > 0 AND StandardCost < 100  THEN '<$100'
		     WHEN StandardCost >= 100 AND StandardCost < 500  THEN '<$500'
		     ELSE '>= $500'
		END AS PriceRange
	FROM 
		Production.Product 

b)	SELECT 
		ppv.ProductID, 
		ppv.BusinessEntityID, 
		pv.Name AS Vendor, 
		ppv.StandardPrice 
	FROM 
		Purchasing.ProductVendor ppv
		JOIN Purchasing.Vendor pv ON ppv.BusinessEntityID = pv.BusinessEntityID
	WHERE 
		ppv.StandardPrice > 10 AND 
		(pv.Name LIKE '%X%' OR pv.Name LIKE 'N%')
	
c) 	SELECT 
		pv.Name AS Vendor  
	FROM 
		Purchasing.Vendor pv 
		LEFT JOIN Purchasing.ProductVendor ppv ON pv.BusinessEntityID = ppv.BusinessEntityID 
	WHERE 
		ppv.BusinessEntityID IS NULL

Task 3

a)	SELECT 
		pp.Name AS Product, 
		ppm.Name AS Model,
		pp.StandardCost
	FROM 
		Production.Product pp 
		JOIN Production.ProductModel ppm  ON pp.ProductModelID = ppm.ProductModelID
	WHERE 
		ppm.Name LIKE 'LL%'

b)	SELECT
		pv.Name AS Vendor, 
		ss.Name AS Store
	FROM 
		Sales.Store ss 
		JOIN Person.BusinessEntity pbe ON ss.BusinessEntityID = pbe.BusinessEntityID
		JOIN Purchasing.Vendor pv ON pbe.BusinessEntityID = pv.BusinessEntityID
	ORDER BY 
		pv.Name

c)	SELECT
		pp.Name AS ProductName
	FROM 
		Production.Product pp JOIN (
			SELECT 
				ssop.ProductID
			FROM 
				Sales.SpecialOfferProduct ssop
			GROUP BY 
				ssop.ProductID
			HAVING 
				COUNT(ssop.ProductID) > 1
		) pso ON pp.ProductID = pso.ProductID
	ORDER BY
		pp.Name
